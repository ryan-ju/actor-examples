/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.4/userguide/tutorial_java_projects.html
 */
group 'com.lmlt.actor.example'
version '1.0.0-SNAPSHOT'

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
}

apply plugin: 'scala'
apply plugin: 'application'

def protoDestDir = "src/main/protoc-generated"
def protoFile = "src/main/protobuf/message.proto"
def protoThirdParty = "src/main/protobuf"

repositories {
    jcenter()
    maven {
        url "https://dl.bintray.com/kamon-io/releases"
    }
    maven {
        url "https://dl.bintray.com/kamon-io/snapshots"
    }
}

configurations {
    scalapbc
}

// In this section you declare the dependencies for your production and test code
dependencies {
    scalapbc 'com.trueaccord.scalapb:scalapbc_2.12:0.6.0-pre5'
    compile 'com.trueaccord.scalapb:scalapb-runtime_2.12:0.6.0-pre5'


    // The production code uses the SLF4J logging API at compile time
//    compile 'org.scala-lang:scala-library:2.12.2'
//    compile 'com.typesafe.akka:akka-actor_2.11:2.5.1'
//    compile 'com.typesafe.akka:akka-stream_2.11:2.5.1'
    compile 'com.typesafe.akka:akka-http_2.12:10.0.7'
    compile 'com.typesafe.akka:akka-cluster-tools_2.12:2.5.2'
    compile 'com.typesafe.akka:akka-cluster-sharding_2.12:2.5.2'
    compile 'com.typesafe.akka:akka-slf4j_2.12:2.5.2'
    compile 'com.lightbend.akka:akka-management-cluster-http_2.12:0.3'
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'com.typesafe.akka:akka-persistence-cassandra_2.12:0.54'

    compile 'com.amazonaws:aws-java-sdk-kinesis:1.11.145'

//    compile 'io.kamon:kamon-akka-2.5_2.12:0.6.7'
    compile 'io.kamon:kamon-akka-2.5_2.12:1.0.0-RC1-513e168ea538f94f5de22b191580ca4faaaa52e6'
//    compile 'io.kamon:kamon-datadog_2.12:0.6.8'
    compile 'io.kamon:kamon-datadog_2.12:1.0.0-RC1-2dcf4510efe9df12e640504bfa30ecabb3422638'
//    compile 'io.kamon:kamon-log-reporter_2.12:0.6.8'
//    compile 'io.kamon:kamon-autoweave_2.12:0.6.7'
    runtime 'org.aspectj:aspectjweaver:1.8.10'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}

task scalapbc {
    doLast {
        mkdir(protoDestDir)

        javaexec {
            main = 'com.trueaccord.scalapb.ScalaPBC'
            classpath = configurations.scalapbc
            args = [protoFile, "--scala_out=${protoDestDir}", "--proto_path=${protoThirdParty}"]
        }
    }
}

compileScala {
    dependsOn scalapbc
    source protoDestDir
}

clean {
    delete protoDestDir
}

mainClassName = 'com.lmlt.actor.example.Main2'