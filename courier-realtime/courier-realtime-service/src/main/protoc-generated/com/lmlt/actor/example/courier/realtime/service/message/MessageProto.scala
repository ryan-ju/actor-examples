// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.lmlt.actor.example.courier.realtime.service.message



sealed trait CourierActorCmd
sealed trait CourierActorEvt
sealed trait CourierObserverEvt
sealed trait KinesisConsumerCmd
sealed trait KinesisConsumerEvt
sealed trait CourierMessage

sealed trait CourierStatus extends _root_.com.trueaccord.scalapb.GeneratedEnum {
  type EnumType = CourierStatus
  def isOnline: Boolean = false
  def isOffline: Boolean = false
  def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[CourierStatus] = com.lmlt.actor.example.courier.realtime.service.message.CourierStatus
}

object CourierStatus extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[CourierStatus] {
  implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[CourierStatus] = this
  @SerialVersionUID(0L)
  case object ONLINE extends CourierStatus {
    val value = 0
    val index = 0
    val name = "ONLINE"
    override def isOnline: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object OFFLINE extends CourierStatus {
    val value = 1
    val index = 1
    val name = "OFFLINE"
    override def isOffline: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case class Unrecognized(value: Int) extends CourierStatus with _root_.com.trueaccord.scalapb.UnrecognizedEnum
  
  lazy val values = scala.collection.Seq(ONLINE, OFFLINE)
  def fromValue(value: Int): CourierStatus = value match {
    case 0 => ONLINE
    case 1 => OFFLINE
    case __other => Unrecognized(__other)
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = MessageProto.javaDescriptor.getEnumTypes.get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = MessageProto.scalaDescriptor.enums(0)
}
@SerialVersionUID(0L)
final case class Coordinates(
    longitude: Double = 0.0,
    latitude: Double = 0.0
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[Coordinates] with com.trueaccord.lenses.Updatable[Coordinates] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      if (longitude != 0.0) { __size += _root_.com.google.protobuf.CodedOutputStream.computeDoubleSize(1, longitude) }
      if (latitude != 0.0) { __size += _root_.com.google.protobuf.CodedOutputStream.computeDoubleSize(2, latitude) }
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      {
        val __v = longitude
        if (__v != 0.0) {
          _output__.writeDouble(1, __v)
        }
      };
      {
        val __v = latitude
        if (__v != 0.0) {
          _output__.writeDouble(2, __v)
        }
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.lmlt.actor.example.courier.realtime.service.message.Coordinates = {
      var __longitude = this.longitude
      var __latitude = this.latitude
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 9 =>
            __longitude = _input__.readDouble()
          case 17 =>
            __latitude = _input__.readDouble()
          case tag => _input__.skipField(tag)
        }
      }
      com.lmlt.actor.example.courier.realtime.service.message.Coordinates(
          longitude = __longitude,
          latitude = __latitude
      )
    }
    def withLongitude(__v: Double): Coordinates = copy(longitude = __v)
    def withLatitude(__v: Double): Coordinates = copy(latitude = __v)
    def getFieldByNumber(__fieldNumber: Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = longitude
          if (__t != 0.0) __t else null
        }
        case 2 => {
          val __t = latitude
          if (__t != 0.0) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PDouble(longitude)
        case 2 => _root_.scalapb.descriptors.PDouble(latitude)
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.lmlt.actor.example.courier.realtime.service.message.Coordinates
}

object Coordinates extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.lmlt.actor.example.courier.realtime.service.message.Coordinates] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.lmlt.actor.example.courier.realtime.service.message.Coordinates] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.lmlt.actor.example.courier.realtime.service.message.Coordinates = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.lmlt.actor.example.courier.realtime.service.message.Coordinates(
      __fieldsMap.getOrElse(__fields.get(0), 0.0).asInstanceOf[Double],
      __fieldsMap.getOrElse(__fields.get(1), 0.0).asInstanceOf[Double]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.lmlt.actor.example.courier.realtime.service.message.Coordinates] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.lmlt.actor.example.courier.realtime.service.message.Coordinates(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[Double]).getOrElse(0.0),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[Double]).getOrElse(0.0)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = MessageProto.javaDescriptor.getMessageTypes.get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = MessageProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.lmlt.actor.example.courier.realtime.service.message.Coordinates(
  )
  implicit class CoordinatesLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.Coordinates]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.Coordinates](_l) {
    def longitude: _root_.com.trueaccord.lenses.Lens[UpperPB, Double] = field(_.longitude)((c_, f_) => c_.copy(longitude = f_))
    def latitude: _root_.com.trueaccord.lenses.Lens[UpperPB, Double] = field(_.latitude)((c_, f_) => c_.copy(latitude = f_))
  }
  final val LONGITUDE_FIELD_NUMBER = 1
  final val LATITUDE_FIELD_NUMBER = 2
}

@SerialVersionUID(0L)
final case class LocationPing(
    traceId: String = "",
    timestamp: Long = 0L,
    courierId: String = "",
    coordinates: scala.Option[com.lmlt.actor.example.courier.realtime.service.message.Coordinates] = None
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[LocationPing] with com.trueaccord.lenses.Updatable[LocationPing] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      if (traceId != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, traceId) }
      if (timestamp != 0L) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(2, timestamp) }
      if (courierId != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, courierId) }
      if (coordinates.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(coordinates.get.serializedSize) + coordinates.get.serializedSize }
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      {
        val __v = traceId
        if (__v != "") {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = timestamp
        if (__v != 0L) {
          _output__.writeInt64(2, __v)
        }
      };
      {
        val __v = courierId
        if (__v != "") {
          _output__.writeString(3, __v)
        }
      };
      coordinates.foreach { __v =>
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.lmlt.actor.example.courier.realtime.service.message.LocationPing = {
      var __traceId = this.traceId
      var __timestamp = this.timestamp
      var __courierId = this.courierId
      var __coordinates = this.coordinates
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __traceId = _input__.readString()
          case 16 =>
            __timestamp = _input__.readInt64()
          case 26 =>
            __courierId = _input__.readString()
          case 34 =>
            __coordinates = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __coordinates.getOrElse(com.lmlt.actor.example.courier.realtime.service.message.Coordinates.defaultInstance)))
          case tag => _input__.skipField(tag)
        }
      }
      com.lmlt.actor.example.courier.realtime.service.message.LocationPing(
          traceId = __traceId,
          timestamp = __timestamp,
          courierId = __courierId,
          coordinates = __coordinates
      )
    }
    def withTraceId(__v: String): LocationPing = copy(traceId = __v)
    def withTimestamp(__v: Long): LocationPing = copy(timestamp = __v)
    def withCourierId(__v: String): LocationPing = copy(courierId = __v)
    def getCoordinates: com.lmlt.actor.example.courier.realtime.service.message.Coordinates = coordinates.getOrElse(com.lmlt.actor.example.courier.realtime.service.message.Coordinates.defaultInstance)
    def clearCoordinates: LocationPing = copy(coordinates = None)
    def withCoordinates(__v: com.lmlt.actor.example.courier.realtime.service.message.Coordinates): LocationPing = copy(coordinates = Some(__v))
    def getFieldByNumber(__fieldNumber: Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = traceId
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = timestamp
          if (__t != 0L) __t else null
        }
        case 3 => {
          val __t = courierId
          if (__t != "") __t else null
        }
        case 4 => coordinates.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(traceId)
        case 2 => _root_.scalapb.descriptors.PLong(timestamp)
        case 3 => _root_.scalapb.descriptors.PString(courierId)
        case 4 => coordinates.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.lmlt.actor.example.courier.realtime.service.message.LocationPing
}

object LocationPing extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.lmlt.actor.example.courier.realtime.service.message.LocationPing] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.lmlt.actor.example.courier.realtime.service.message.LocationPing] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.lmlt.actor.example.courier.realtime.service.message.LocationPing = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.lmlt.actor.example.courier.realtime.service.message.LocationPing(
      __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[String],
      __fieldsMap.getOrElse(__fields.get(1), 0L).asInstanceOf[Long],
      __fieldsMap.getOrElse(__fields.get(2), "").asInstanceOf[String],
      __fieldsMap.get(__fields.get(3)).asInstanceOf[scala.Option[com.lmlt.actor.example.courier.realtime.service.message.Coordinates]]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.lmlt.actor.example.courier.realtime.service.message.LocationPing] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.lmlt.actor.example.courier.realtime.service.message.LocationPing(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[Long]).getOrElse(0L),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[scala.Option[com.lmlt.actor.example.courier.realtime.service.message.Coordinates]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = MessageProto.javaDescriptor.getMessageTypes.get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = MessageProto.scalaDescriptor.messages(1)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 4 => __out = com.lmlt.actor.example.courier.realtime.service.message.Coordinates
    }
    __out
  }
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.lmlt.actor.example.courier.realtime.service.message.LocationPing(
  )
  implicit class LocationPingLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.LocationPing]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.LocationPing](_l) {
    def traceId: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.traceId)((c_, f_) => c_.copy(traceId = f_))
    def timestamp: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.timestamp)((c_, f_) => c_.copy(timestamp = f_))
    def courierId: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.courierId)((c_, f_) => c_.copy(courierId = f_))
    def coordinates: _root_.com.trueaccord.lenses.Lens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.Coordinates] = field(_.getCoordinates)((c_, f_) => c_.copy(coordinates = Some(f_)))
    def optionalCoordinates: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.lmlt.actor.example.courier.realtime.service.message.Coordinates]] = field(_.coordinates)((c_, f_) => c_.copy(coordinates = f_))
  }
  final val TRACE_ID_FIELD_NUMBER = 1
  final val TIMESTAMP_FIELD_NUMBER = 2
  final val COURIER_ID_FIELD_NUMBER = 3
  final val COORDINATES_FIELD_NUMBER = 4
}

@SerialVersionUID(0L)
final case class KinesisMessage(
    kinesisSeqNr: String = "",
    kinesisMessagePayload: com.lmlt.actor.example.courier.realtime.service.message.KinesisMessage.KinesisMessagePayload = com.lmlt.actor.example.courier.realtime.service.message.KinesisMessage.KinesisMessagePayload.Empty
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[KinesisMessage] with com.trueaccord.lenses.Updatable[KinesisMessage] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      if (kinesisSeqNr != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, kinesisSeqNr) }
      if (kinesisMessagePayload.locationPing.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(kinesisMessagePayload.locationPing.get.serializedSize) + kinesisMessagePayload.locationPing.get.serializedSize }
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      {
        val __v = kinesisSeqNr
        if (__v != "") {
          _output__.writeString(1, __v)
        }
      };
      kinesisMessagePayload.locationPing.foreach { __v =>
        _output__.writeTag(11, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.lmlt.actor.example.courier.realtime.service.message.KinesisMessage = {
      var __kinesisSeqNr = this.kinesisSeqNr
      var __kinesisMessagePayload = this.kinesisMessagePayload
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __kinesisSeqNr = _input__.readString()
          case 90 =>
            __kinesisMessagePayload = com.lmlt.actor.example.courier.realtime.service.message.KinesisMessage.KinesisMessagePayload.LocationPing(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, kinesisMessagePayload.locationPing.getOrElse(com.lmlt.actor.example.courier.realtime.service.message.LocationPing.defaultInstance)))
          case tag => _input__.skipField(tag)
        }
      }
      com.lmlt.actor.example.courier.realtime.service.message.KinesisMessage(
          kinesisSeqNr = __kinesisSeqNr,
          kinesisMessagePayload = __kinesisMessagePayload
      )
    }
    def withKinesisSeqNr(__v: String): KinesisMessage = copy(kinesisSeqNr = __v)
    def getLocationPing: com.lmlt.actor.example.courier.realtime.service.message.LocationPing = kinesisMessagePayload.locationPing.getOrElse(com.lmlt.actor.example.courier.realtime.service.message.LocationPing.defaultInstance)
    def withLocationPing(__v: com.lmlt.actor.example.courier.realtime.service.message.LocationPing): KinesisMessage = copy(kinesisMessagePayload = com.lmlt.actor.example.courier.realtime.service.message.KinesisMessage.KinesisMessagePayload.LocationPing(__v))
    def clearKinesisMessagePayload: KinesisMessage = copy(kinesisMessagePayload = com.lmlt.actor.example.courier.realtime.service.message.KinesisMessage.KinesisMessagePayload.Empty)
    def withKinesisMessagePayload(__v: com.lmlt.actor.example.courier.realtime.service.message.KinesisMessage.KinesisMessagePayload): KinesisMessage = copy(kinesisMessagePayload = __v)
    def getFieldByNumber(__fieldNumber: Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = kinesisSeqNr
          if (__t != "") __t else null
        }
        case 11 => kinesisMessagePayload.locationPing.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(kinesisSeqNr)
        case 11 => kinesisMessagePayload.locationPing.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.lmlt.actor.example.courier.realtime.service.message.KinesisMessage
}

object KinesisMessage extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.lmlt.actor.example.courier.realtime.service.message.KinesisMessage] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.lmlt.actor.example.courier.realtime.service.message.KinesisMessage] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.lmlt.actor.example.courier.realtime.service.message.KinesisMessage = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.lmlt.actor.example.courier.realtime.service.message.KinesisMessage(
      __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[String],
      kinesisMessagePayload = __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[com.lmlt.actor.example.courier.realtime.service.message.LocationPing]].map(com.lmlt.actor.example.courier.realtime.service.message.KinesisMessage.KinesisMessagePayload.LocationPing(_)) getOrElse com.lmlt.actor.example.courier.realtime.service.message.KinesisMessage.KinesisMessagePayload.Empty
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.lmlt.actor.example.courier.realtime.service.message.KinesisMessage] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.lmlt.actor.example.courier.realtime.service.message.KinesisMessage(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[String]).getOrElse(""),
        kinesisMessagePayload = __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).flatMap(_.as[scala.Option[com.lmlt.actor.example.courier.realtime.service.message.LocationPing]]).map(com.lmlt.actor.example.courier.realtime.service.message.KinesisMessage.KinesisMessagePayload.LocationPing(_)) getOrElse com.lmlt.actor.example.courier.realtime.service.message.KinesisMessage.KinesisMessagePayload.Empty
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = MessageProto.javaDescriptor.getMessageTypes.get(2)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = MessageProto.scalaDescriptor.messages(2)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 11 => __out = com.lmlt.actor.example.courier.realtime.service.message.LocationPing
    }
    __out
  }
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.lmlt.actor.example.courier.realtime.service.message.KinesisMessage(
  )
  sealed trait KinesisMessagePayload extends _root_.com.trueaccord.scalapb.GeneratedOneof {
    def isEmpty: Boolean = false
    def isDefined: Boolean = true
    def isLocationPing: Boolean = false
    def locationPing: scala.Option[com.lmlt.actor.example.courier.realtime.service.message.LocationPing] = None
  }
  object KinesisMessagePayload extends {
    @SerialVersionUID(0L)
    case object Empty extends com.lmlt.actor.example.courier.realtime.service.message.KinesisMessage.KinesisMessagePayload {
      override def isEmpty: Boolean = true
      override def isDefined: Boolean = false
      override def number: Int = 0
      override def value: scala.Any = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    case class LocationPing(value: com.lmlt.actor.example.courier.realtime.service.message.LocationPing) extends com.lmlt.actor.example.courier.realtime.service.message.KinesisMessage.KinesisMessagePayload {
      override def isLocationPing: Boolean = true
      override def locationPing: scala.Option[com.lmlt.actor.example.courier.realtime.service.message.LocationPing] = Some(value)
      override def number: Int = 11
    }
  }
  implicit class KinesisMessageLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.KinesisMessage]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.KinesisMessage](_l) {
    def kinesisSeqNr: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.kinesisSeqNr)((c_, f_) => c_.copy(kinesisSeqNr = f_))
    def locationPing: _root_.com.trueaccord.lenses.Lens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.LocationPing] = field(_.getLocationPing)((c_, f_) => c_.copy(kinesisMessagePayload = com.lmlt.actor.example.courier.realtime.service.message.KinesisMessage.KinesisMessagePayload.LocationPing(f_)))
    def kinesisMessagePayload: _root_.com.trueaccord.lenses.Lens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.KinesisMessage.KinesisMessagePayload] = field(_.kinesisMessagePayload)((c_, f_) => c_.copy(kinesisMessagePayload = f_))
  }
  final val KINESIS_SEQ_NR_FIELD_NUMBER = 1
  final val LOCATION_PING_FIELD_NUMBER = 11
}

@SerialVersionUID(0L)
final case class CourierActorOfflineCmd(
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[CourierActorOfflineCmd] with com.trueaccord.lenses.Updatable[CourierActorOfflineCmd] with CourierActorCmd {
    final override def serializedSize: Int = 0
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.lmlt.actor.example.courier.realtime.service.message.CourierActorOfflineCmd = {
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case tag => _input__.skipField(tag)
        }
      }
      com.lmlt.actor.example.courier.realtime.service.message.CourierActorOfflineCmd(
      )
    }
    def getFieldByNumber(__fieldNumber: Int): scala.Any = throw new MatchError(__fieldNumber)
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = throw new MatchError(__field)
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.lmlt.actor.example.courier.realtime.service.message.CourierActorOfflineCmd
}

object CourierActorOfflineCmd extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.lmlt.actor.example.courier.realtime.service.message.CourierActorOfflineCmd] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.lmlt.actor.example.courier.realtime.service.message.CourierActorOfflineCmd] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.lmlt.actor.example.courier.realtime.service.message.CourierActorOfflineCmd = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.lmlt.actor.example.courier.realtime.service.message.CourierActorOfflineCmd(
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.lmlt.actor.example.courier.realtime.service.message.CourierActorOfflineCmd] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.lmlt.actor.example.courier.realtime.service.message.CourierActorOfflineCmd(
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = MessageProto.javaDescriptor.getMessageTypes.get(3)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = MessageProto.scalaDescriptor.messages(3)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.lmlt.actor.example.courier.realtime.service.message.CourierActorOfflineCmd(
  )
  implicit class CourierActorOfflineCmdLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.CourierActorOfflineCmd]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.CourierActorOfflineCmd](_l) {
  }
}

@SerialVersionUID(0L)
final case class CourierActorStatusEvt(
    timestamp: Long = 0L,
    courierStatus: com.lmlt.actor.example.courier.realtime.service.message.CourierStatus = com.lmlt.actor.example.courier.realtime.service.message.CourierStatus.ONLINE
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[CourierActorStatusEvt] with com.trueaccord.lenses.Updatable[CourierActorStatusEvt] with CourierActorEvt {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      if (timestamp != 0L) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(1, timestamp) }
      if (courierStatus != com.lmlt.actor.example.courier.realtime.service.message.CourierStatus.ONLINE) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(2, courierStatus.value) }
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      {
        val __v = timestamp
        if (__v != 0L) {
          _output__.writeInt64(1, __v)
        }
      };
      {
        val __v = courierStatus
        if (__v != com.lmlt.actor.example.courier.realtime.service.message.CourierStatus.ONLINE) {
          _output__.writeEnum(2, __v.value)
        }
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.lmlt.actor.example.courier.realtime.service.message.CourierActorStatusEvt = {
      var __timestamp = this.timestamp
      var __courierStatus = this.courierStatus
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __timestamp = _input__.readInt64()
          case 16 =>
            __courierStatus = com.lmlt.actor.example.courier.realtime.service.message.CourierStatus.fromValue(_input__.readEnum())
          case tag => _input__.skipField(tag)
        }
      }
      com.lmlt.actor.example.courier.realtime.service.message.CourierActorStatusEvt(
          timestamp = __timestamp,
          courierStatus = __courierStatus
      )
    }
    def withTimestamp(__v: Long): CourierActorStatusEvt = copy(timestamp = __v)
    def withCourierStatus(__v: com.lmlt.actor.example.courier.realtime.service.message.CourierStatus): CourierActorStatusEvt = copy(courierStatus = __v)
    def getFieldByNumber(__fieldNumber: Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = timestamp
          if (__t != 0L) __t else null
        }
        case 2 => {
          val __t = courierStatus.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PLong(timestamp)
        case 2 => _root_.scalapb.descriptors.PEnum(courierStatus.scalaValueDescriptor)
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.lmlt.actor.example.courier.realtime.service.message.CourierActorStatusEvt
}

object CourierActorStatusEvt extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.lmlt.actor.example.courier.realtime.service.message.CourierActorStatusEvt] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.lmlt.actor.example.courier.realtime.service.message.CourierActorStatusEvt] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.lmlt.actor.example.courier.realtime.service.message.CourierActorStatusEvt = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.lmlt.actor.example.courier.realtime.service.message.CourierActorStatusEvt(
      __fieldsMap.getOrElse(__fields.get(0), 0L).asInstanceOf[Long],
      com.lmlt.actor.example.courier.realtime.service.message.CourierStatus.fromValue(__fieldsMap.getOrElse(__fields.get(1), com.lmlt.actor.example.courier.realtime.service.message.CourierStatus.ONLINE.javaValueDescriptor).asInstanceOf[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor].getNumber)
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.lmlt.actor.example.courier.realtime.service.message.CourierActorStatusEvt] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.lmlt.actor.example.courier.realtime.service.message.CourierActorStatusEvt(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[Long]).getOrElse(0L),
        com.lmlt.actor.example.courier.realtime.service.message.CourierStatus.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(com.lmlt.actor.example.courier.realtime.service.message.CourierStatus.ONLINE.scalaValueDescriptor).number)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = MessageProto.javaDescriptor.getMessageTypes.get(4)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = MessageProto.scalaDescriptor.messages(4)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 2 => com.lmlt.actor.example.courier.realtime.service.message.CourierStatus
    }
  }
  lazy val defaultInstance = com.lmlt.actor.example.courier.realtime.service.message.CourierActorStatusEvt(
  )
  implicit class CourierActorStatusEvtLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.CourierActorStatusEvt]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.CourierActorStatusEvt](_l) {
    def timestamp: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.timestamp)((c_, f_) => c_.copy(timestamp = f_))
    def courierStatus: _root_.com.trueaccord.lenses.Lens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.CourierStatus] = field(_.courierStatus)((c_, f_) => c_.copy(courierStatus = f_))
  }
  final val TIMESTAMP_FIELD_NUMBER = 1
  final val COURIER_STATUS_FIELD_NUMBER = 2
}

@SerialVersionUID(0L)
final case class CourierActorLocationEvt(
    timestamp: Long = 0L,
    coordinates: scala.Option[com.lmlt.actor.example.courier.realtime.service.message.Coordinates] = None
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[CourierActorLocationEvt] with com.trueaccord.lenses.Updatable[CourierActorLocationEvt] with CourierActorEvt {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      if (timestamp != 0L) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(1, timestamp) }
      if (coordinates.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(coordinates.get.serializedSize) + coordinates.get.serializedSize }
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      {
        val __v = timestamp
        if (__v != 0L) {
          _output__.writeInt64(1, __v)
        }
      };
      coordinates.foreach { __v =>
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.lmlt.actor.example.courier.realtime.service.message.CourierActorLocationEvt = {
      var __timestamp = this.timestamp
      var __coordinates = this.coordinates
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __timestamp = _input__.readInt64()
          case 18 =>
            __coordinates = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __coordinates.getOrElse(com.lmlt.actor.example.courier.realtime.service.message.Coordinates.defaultInstance)))
          case tag => _input__.skipField(tag)
        }
      }
      com.lmlt.actor.example.courier.realtime.service.message.CourierActorLocationEvt(
          timestamp = __timestamp,
          coordinates = __coordinates
      )
    }
    def withTimestamp(__v: Long): CourierActorLocationEvt = copy(timestamp = __v)
    def getCoordinates: com.lmlt.actor.example.courier.realtime.service.message.Coordinates = coordinates.getOrElse(com.lmlt.actor.example.courier.realtime.service.message.Coordinates.defaultInstance)
    def clearCoordinates: CourierActorLocationEvt = copy(coordinates = None)
    def withCoordinates(__v: com.lmlt.actor.example.courier.realtime.service.message.Coordinates): CourierActorLocationEvt = copy(coordinates = Some(__v))
    def getFieldByNumber(__fieldNumber: Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = timestamp
          if (__t != 0L) __t else null
        }
        case 2 => coordinates.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PLong(timestamp)
        case 2 => coordinates.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.lmlt.actor.example.courier.realtime.service.message.CourierActorLocationEvt
}

object CourierActorLocationEvt extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.lmlt.actor.example.courier.realtime.service.message.CourierActorLocationEvt] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.lmlt.actor.example.courier.realtime.service.message.CourierActorLocationEvt] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.lmlt.actor.example.courier.realtime.service.message.CourierActorLocationEvt = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.lmlt.actor.example.courier.realtime.service.message.CourierActorLocationEvt(
      __fieldsMap.getOrElse(__fields.get(0), 0L).asInstanceOf[Long],
      __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[com.lmlt.actor.example.courier.realtime.service.message.Coordinates]]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.lmlt.actor.example.courier.realtime.service.message.CourierActorLocationEvt] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.lmlt.actor.example.courier.realtime.service.message.CourierActorLocationEvt(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[Long]).getOrElse(0L),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[com.lmlt.actor.example.courier.realtime.service.message.Coordinates]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = MessageProto.javaDescriptor.getMessageTypes.get(5)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = MessageProto.scalaDescriptor.messages(5)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 2 => __out = com.lmlt.actor.example.courier.realtime.service.message.Coordinates
    }
    __out
  }
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.lmlt.actor.example.courier.realtime.service.message.CourierActorLocationEvt(
  )
  implicit class CourierActorLocationEvtLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.CourierActorLocationEvt]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.CourierActorLocationEvt](_l) {
    def timestamp: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.timestamp)((c_, f_) => c_.copy(timestamp = f_))
    def coordinates: _root_.com.trueaccord.lenses.Lens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.Coordinates] = field(_.getCoordinates)((c_, f_) => c_.copy(coordinates = Some(f_)))
    def optionalCoordinates: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.lmlt.actor.example.courier.realtime.service.message.Coordinates]] = field(_.coordinates)((c_, f_) => c_.copy(coordinates = f_))
  }
  final val TIMESTAMP_FIELD_NUMBER = 1
  final val COORDINATES_FIELD_NUMBER = 2
}

@SerialVersionUID(0L)
final case class CourierObserverStatusEvt(
    timestamp: Long = 0L,
    courierId: String = "",
    courierStatus: com.lmlt.actor.example.courier.realtime.service.message.CourierStatus = com.lmlt.actor.example.courier.realtime.service.message.CourierStatus.ONLINE
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[CourierObserverStatusEvt] with com.trueaccord.lenses.Updatable[CourierObserverStatusEvt] with CourierObserverEvt {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      if (timestamp != 0L) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(1, timestamp) }
      if (courierId != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, courierId) }
      if (courierStatus != com.lmlt.actor.example.courier.realtime.service.message.CourierStatus.ONLINE) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(3, courierStatus.value) }
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      {
        val __v = timestamp
        if (__v != 0L) {
          _output__.writeInt64(1, __v)
        }
      };
      {
        val __v = courierId
        if (__v != "") {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = courierStatus
        if (__v != com.lmlt.actor.example.courier.realtime.service.message.CourierStatus.ONLINE) {
          _output__.writeEnum(3, __v.value)
        }
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.lmlt.actor.example.courier.realtime.service.message.CourierObserverStatusEvt = {
      var __timestamp = this.timestamp
      var __courierId = this.courierId
      var __courierStatus = this.courierStatus
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __timestamp = _input__.readInt64()
          case 18 =>
            __courierId = _input__.readString()
          case 24 =>
            __courierStatus = com.lmlt.actor.example.courier.realtime.service.message.CourierStatus.fromValue(_input__.readEnum())
          case tag => _input__.skipField(tag)
        }
      }
      com.lmlt.actor.example.courier.realtime.service.message.CourierObserverStatusEvt(
          timestamp = __timestamp,
          courierId = __courierId,
          courierStatus = __courierStatus
      )
    }
    def withTimestamp(__v: Long): CourierObserverStatusEvt = copy(timestamp = __v)
    def withCourierId(__v: String): CourierObserverStatusEvt = copy(courierId = __v)
    def withCourierStatus(__v: com.lmlt.actor.example.courier.realtime.service.message.CourierStatus): CourierObserverStatusEvt = copy(courierStatus = __v)
    def getFieldByNumber(__fieldNumber: Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = timestamp
          if (__t != 0L) __t else null
        }
        case 2 => {
          val __t = courierId
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = courierStatus.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PLong(timestamp)
        case 2 => _root_.scalapb.descriptors.PString(courierId)
        case 3 => _root_.scalapb.descriptors.PEnum(courierStatus.scalaValueDescriptor)
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.lmlt.actor.example.courier.realtime.service.message.CourierObserverStatusEvt
}

object CourierObserverStatusEvt extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.lmlt.actor.example.courier.realtime.service.message.CourierObserverStatusEvt] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.lmlt.actor.example.courier.realtime.service.message.CourierObserverStatusEvt] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.lmlt.actor.example.courier.realtime.service.message.CourierObserverStatusEvt = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.lmlt.actor.example.courier.realtime.service.message.CourierObserverStatusEvt(
      __fieldsMap.getOrElse(__fields.get(0), 0L).asInstanceOf[Long],
      __fieldsMap.getOrElse(__fields.get(1), "").asInstanceOf[String],
      com.lmlt.actor.example.courier.realtime.service.message.CourierStatus.fromValue(__fieldsMap.getOrElse(__fields.get(2), com.lmlt.actor.example.courier.realtime.service.message.CourierStatus.ONLINE.javaValueDescriptor).asInstanceOf[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor].getNumber)
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.lmlt.actor.example.courier.realtime.service.message.CourierObserverStatusEvt] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.lmlt.actor.example.courier.realtime.service.message.CourierObserverStatusEvt(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[Long]).getOrElse(0L),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[String]).getOrElse(""),
        com.lmlt.actor.example.courier.realtime.service.message.CourierStatus.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(com.lmlt.actor.example.courier.realtime.service.message.CourierStatus.ONLINE.scalaValueDescriptor).number)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = MessageProto.javaDescriptor.getMessageTypes.get(6)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = MessageProto.scalaDescriptor.messages(6)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 3 => com.lmlt.actor.example.courier.realtime.service.message.CourierStatus
    }
  }
  lazy val defaultInstance = com.lmlt.actor.example.courier.realtime.service.message.CourierObserverStatusEvt(
  )
  implicit class CourierObserverStatusEvtLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.CourierObserverStatusEvt]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.CourierObserverStatusEvt](_l) {
    def timestamp: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.timestamp)((c_, f_) => c_.copy(timestamp = f_))
    def courierId: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.courierId)((c_, f_) => c_.copy(courierId = f_))
    def courierStatus: _root_.com.trueaccord.lenses.Lens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.CourierStatus] = field(_.courierStatus)((c_, f_) => c_.copy(courierStatus = f_))
  }
  final val TIMESTAMP_FIELD_NUMBER = 1
  final val COURIER_ID_FIELD_NUMBER = 2
  final val COURIER_STATUS_FIELD_NUMBER = 3
}

@SerialVersionUID(0L)
final case class CourierObserverLocationEvt(
    timestamp: Long = 0L,
    courierId: String = "",
    coordinates: scala.Option[com.lmlt.actor.example.courier.realtime.service.message.Coordinates] = None
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[CourierObserverLocationEvt] with com.trueaccord.lenses.Updatable[CourierObserverLocationEvt] with CourierObserverEvt {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      if (timestamp != 0L) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(1, timestamp) }
      if (courierId != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, courierId) }
      if (coordinates.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(coordinates.get.serializedSize) + coordinates.get.serializedSize }
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      {
        val __v = timestamp
        if (__v != 0L) {
          _output__.writeInt64(1, __v)
        }
      };
      {
        val __v = courierId
        if (__v != "") {
          _output__.writeString(2, __v)
        }
      };
      coordinates.foreach { __v =>
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.lmlt.actor.example.courier.realtime.service.message.CourierObserverLocationEvt = {
      var __timestamp = this.timestamp
      var __courierId = this.courierId
      var __coordinates = this.coordinates
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __timestamp = _input__.readInt64()
          case 18 =>
            __courierId = _input__.readString()
          case 26 =>
            __coordinates = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __coordinates.getOrElse(com.lmlt.actor.example.courier.realtime.service.message.Coordinates.defaultInstance)))
          case tag => _input__.skipField(tag)
        }
      }
      com.lmlt.actor.example.courier.realtime.service.message.CourierObserverLocationEvt(
          timestamp = __timestamp,
          courierId = __courierId,
          coordinates = __coordinates
      )
    }
    def withTimestamp(__v: Long): CourierObserverLocationEvt = copy(timestamp = __v)
    def withCourierId(__v: String): CourierObserverLocationEvt = copy(courierId = __v)
    def getCoordinates: com.lmlt.actor.example.courier.realtime.service.message.Coordinates = coordinates.getOrElse(com.lmlt.actor.example.courier.realtime.service.message.Coordinates.defaultInstance)
    def clearCoordinates: CourierObserverLocationEvt = copy(coordinates = None)
    def withCoordinates(__v: com.lmlt.actor.example.courier.realtime.service.message.Coordinates): CourierObserverLocationEvt = copy(coordinates = Some(__v))
    def getFieldByNumber(__fieldNumber: Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = timestamp
          if (__t != 0L) __t else null
        }
        case 2 => {
          val __t = courierId
          if (__t != "") __t else null
        }
        case 3 => coordinates.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PLong(timestamp)
        case 2 => _root_.scalapb.descriptors.PString(courierId)
        case 3 => coordinates.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.lmlt.actor.example.courier.realtime.service.message.CourierObserverLocationEvt
}

object CourierObserverLocationEvt extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.lmlt.actor.example.courier.realtime.service.message.CourierObserverLocationEvt] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.lmlt.actor.example.courier.realtime.service.message.CourierObserverLocationEvt] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.lmlt.actor.example.courier.realtime.service.message.CourierObserverLocationEvt = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.lmlt.actor.example.courier.realtime.service.message.CourierObserverLocationEvt(
      __fieldsMap.getOrElse(__fields.get(0), 0L).asInstanceOf[Long],
      __fieldsMap.getOrElse(__fields.get(1), "").asInstanceOf[String],
      __fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[com.lmlt.actor.example.courier.realtime.service.message.Coordinates]]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.lmlt.actor.example.courier.realtime.service.message.CourierObserverLocationEvt] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.lmlt.actor.example.courier.realtime.service.message.CourierObserverLocationEvt(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[Long]).getOrElse(0L),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[scala.Option[com.lmlt.actor.example.courier.realtime.service.message.Coordinates]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = MessageProto.javaDescriptor.getMessageTypes.get(7)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = MessageProto.scalaDescriptor.messages(7)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 3 => __out = com.lmlt.actor.example.courier.realtime.service.message.Coordinates
    }
    __out
  }
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.lmlt.actor.example.courier.realtime.service.message.CourierObserverLocationEvt(
  )
  implicit class CourierObserverLocationEvtLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.CourierObserverLocationEvt]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.CourierObserverLocationEvt](_l) {
    def timestamp: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.timestamp)((c_, f_) => c_.copy(timestamp = f_))
    def courierId: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.courierId)((c_, f_) => c_.copy(courierId = f_))
    def coordinates: _root_.com.trueaccord.lenses.Lens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.Coordinates] = field(_.getCoordinates)((c_, f_) => c_.copy(coordinates = Some(f_)))
    def optionalCoordinates: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.lmlt.actor.example.courier.realtime.service.message.Coordinates]] = field(_.coordinates)((c_, f_) => c_.copy(coordinates = f_))
  }
  final val TIMESTAMP_FIELD_NUMBER = 1
  final val COURIER_ID_FIELD_NUMBER = 2
  final val COORDINATES_FIELD_NUMBER = 3
}

@SerialVersionUID(0L)
final case class CourierActorState(
    lastMessageTimestamp: Long = 0L,
    courierStatus: com.lmlt.actor.example.courier.realtime.service.message.CourierStatus = com.lmlt.actor.example.courier.realtime.service.message.CourierStatus.ONLINE,
    coordinates: scala.Option[com.lmlt.actor.example.courier.realtime.service.message.Coordinates] = None
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[CourierActorState] with com.trueaccord.lenses.Updatable[CourierActorState] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      if (lastMessageTimestamp != 0L) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(1, lastMessageTimestamp) }
      if (courierStatus != com.lmlt.actor.example.courier.realtime.service.message.CourierStatus.ONLINE) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(2, courierStatus.value) }
      if (coordinates.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(coordinates.get.serializedSize) + coordinates.get.serializedSize }
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      {
        val __v = lastMessageTimestamp
        if (__v != 0L) {
          _output__.writeInt64(1, __v)
        }
      };
      {
        val __v = courierStatus
        if (__v != com.lmlt.actor.example.courier.realtime.service.message.CourierStatus.ONLINE) {
          _output__.writeEnum(2, __v.value)
        }
      };
      coordinates.foreach { __v =>
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.lmlt.actor.example.courier.realtime.service.message.CourierActorState = {
      var __lastMessageTimestamp = this.lastMessageTimestamp
      var __courierStatus = this.courierStatus
      var __coordinates = this.coordinates
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __lastMessageTimestamp = _input__.readInt64()
          case 16 =>
            __courierStatus = com.lmlt.actor.example.courier.realtime.service.message.CourierStatus.fromValue(_input__.readEnum())
          case 26 =>
            __coordinates = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __coordinates.getOrElse(com.lmlt.actor.example.courier.realtime.service.message.Coordinates.defaultInstance)))
          case tag => _input__.skipField(tag)
        }
      }
      com.lmlt.actor.example.courier.realtime.service.message.CourierActorState(
          lastMessageTimestamp = __lastMessageTimestamp,
          courierStatus = __courierStatus,
          coordinates = __coordinates
      )
    }
    def withLastMessageTimestamp(__v: Long): CourierActorState = copy(lastMessageTimestamp = __v)
    def withCourierStatus(__v: com.lmlt.actor.example.courier.realtime.service.message.CourierStatus): CourierActorState = copy(courierStatus = __v)
    def getCoordinates: com.lmlt.actor.example.courier.realtime.service.message.Coordinates = coordinates.getOrElse(com.lmlt.actor.example.courier.realtime.service.message.Coordinates.defaultInstance)
    def clearCoordinates: CourierActorState = copy(coordinates = None)
    def withCoordinates(__v: com.lmlt.actor.example.courier.realtime.service.message.Coordinates): CourierActorState = copy(coordinates = Some(__v))
    def getFieldByNumber(__fieldNumber: Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = lastMessageTimestamp
          if (__t != 0L) __t else null
        }
        case 2 => {
          val __t = courierStatus.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 3 => coordinates.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PLong(lastMessageTimestamp)
        case 2 => _root_.scalapb.descriptors.PEnum(courierStatus.scalaValueDescriptor)
        case 3 => coordinates.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.lmlt.actor.example.courier.realtime.service.message.CourierActorState
}

object CourierActorState extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.lmlt.actor.example.courier.realtime.service.message.CourierActorState] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.lmlt.actor.example.courier.realtime.service.message.CourierActorState] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.lmlt.actor.example.courier.realtime.service.message.CourierActorState = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.lmlt.actor.example.courier.realtime.service.message.CourierActorState(
      __fieldsMap.getOrElse(__fields.get(0), 0L).asInstanceOf[Long],
      com.lmlt.actor.example.courier.realtime.service.message.CourierStatus.fromValue(__fieldsMap.getOrElse(__fields.get(1), com.lmlt.actor.example.courier.realtime.service.message.CourierStatus.ONLINE.javaValueDescriptor).asInstanceOf[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor].getNumber),
      __fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[com.lmlt.actor.example.courier.realtime.service.message.Coordinates]]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.lmlt.actor.example.courier.realtime.service.message.CourierActorState] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.lmlt.actor.example.courier.realtime.service.message.CourierActorState(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[Long]).getOrElse(0L),
        com.lmlt.actor.example.courier.realtime.service.message.CourierStatus.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(com.lmlt.actor.example.courier.realtime.service.message.CourierStatus.ONLINE.scalaValueDescriptor).number),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[scala.Option[com.lmlt.actor.example.courier.realtime.service.message.Coordinates]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = MessageProto.javaDescriptor.getMessageTypes.get(8)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = MessageProto.scalaDescriptor.messages(8)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 3 => __out = com.lmlt.actor.example.courier.realtime.service.message.Coordinates
    }
    __out
  }
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 2 => com.lmlt.actor.example.courier.realtime.service.message.CourierStatus
    }
  }
  lazy val defaultInstance = com.lmlt.actor.example.courier.realtime.service.message.CourierActorState(
  )
  implicit class CourierActorStateLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.CourierActorState]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.CourierActorState](_l) {
    def lastMessageTimestamp: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.lastMessageTimestamp)((c_, f_) => c_.copy(lastMessageTimestamp = f_))
    def courierStatus: _root_.com.trueaccord.lenses.Lens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.CourierStatus] = field(_.courierStatus)((c_, f_) => c_.copy(courierStatus = f_))
    def coordinates: _root_.com.trueaccord.lenses.Lens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.Coordinates] = field(_.getCoordinates)((c_, f_) => c_.copy(coordinates = Some(f_)))
    def optionalCoordinates: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.lmlt.actor.example.courier.realtime.service.message.Coordinates]] = field(_.coordinates)((c_, f_) => c_.copy(coordinates = f_))
  }
  final val LASTMESSAGETIMESTAMP_FIELD_NUMBER = 1
  final val COURIER_STATUS_FIELD_NUMBER = 2
  final val COORDINATES_FIELD_NUMBER = 3
}

@SerialVersionUID(0L)
final case class KinesisConsumerBootstrapCmd(
    awsRegion: String = "",
    kiensisStreamName: String = "",
    entityId: String = ""
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[KinesisConsumerBootstrapCmd] with com.trueaccord.lenses.Updatable[KinesisConsumerBootstrapCmd] with KinesisConsumerCmd {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      if (awsRegion != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, awsRegion) }
      if (kiensisStreamName != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, kiensisStreamName) }
      if (entityId != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, entityId) }
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      {
        val __v = awsRegion
        if (__v != "") {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = kiensisStreamName
        if (__v != "") {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = entityId
        if (__v != "") {
          _output__.writeString(3, __v)
        }
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerBootstrapCmd = {
      var __awsRegion = this.awsRegion
      var __kiensisStreamName = this.kiensisStreamName
      var __entityId = this.entityId
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __awsRegion = _input__.readString()
          case 18 =>
            __kiensisStreamName = _input__.readString()
          case 26 =>
            __entityId = _input__.readString()
          case tag => _input__.skipField(tag)
        }
      }
      com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerBootstrapCmd(
          awsRegion = __awsRegion,
          kiensisStreamName = __kiensisStreamName,
          entityId = __entityId
      )
    }
    def withAwsRegion(__v: String): KinesisConsumerBootstrapCmd = copy(awsRegion = __v)
    def withKiensisStreamName(__v: String): KinesisConsumerBootstrapCmd = copy(kiensisStreamName = __v)
    def withEntityId(__v: String): KinesisConsumerBootstrapCmd = copy(entityId = __v)
    def getFieldByNumber(__fieldNumber: Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = awsRegion
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = kiensisStreamName
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = entityId
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(awsRegion)
        case 2 => _root_.scalapb.descriptors.PString(kiensisStreamName)
        case 3 => _root_.scalapb.descriptors.PString(entityId)
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerBootstrapCmd
}

object KinesisConsumerBootstrapCmd extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerBootstrapCmd] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerBootstrapCmd] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerBootstrapCmd = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerBootstrapCmd(
      __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[String],
      __fieldsMap.getOrElse(__fields.get(1), "").asInstanceOf[String],
      __fieldsMap.getOrElse(__fields.get(2), "").asInstanceOf[String]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerBootstrapCmd] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerBootstrapCmd(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = MessageProto.javaDescriptor.getMessageTypes.get(9)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = MessageProto.scalaDescriptor.messages(9)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerBootstrapCmd(
  )
  implicit class KinesisConsumerBootstrapCmdLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerBootstrapCmd]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerBootstrapCmd](_l) {
    def awsRegion: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.awsRegion)((c_, f_) => c_.copy(awsRegion = f_))
    def kiensisStreamName: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.kiensisStreamName)((c_, f_) => c_.copy(kiensisStreamName = f_))
    def entityId: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.entityId)((c_, f_) => c_.copy(entityId = f_))
  }
  final val AWS_REGION_FIELD_NUMBER = 1
  final val KIENSIS_STREAM_NAME_FIELD_NUMBER = 2
  final val ENTITY_ID_FIELD_NUMBER = 3
}

@SerialVersionUID(0L)
final case class KinesisConsumerLoopCmd(
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[KinesisConsumerLoopCmd] with com.trueaccord.lenses.Updatable[KinesisConsumerLoopCmd] with KinesisConsumerCmd {
    final override def serializedSize: Int = 0
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerLoopCmd = {
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case tag => _input__.skipField(tag)
        }
      }
      com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerLoopCmd(
      )
    }
    def getFieldByNumber(__fieldNumber: Int): scala.Any = throw new MatchError(__fieldNumber)
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = throw new MatchError(__field)
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerLoopCmd
}

object KinesisConsumerLoopCmd extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerLoopCmd] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerLoopCmd] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerLoopCmd = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerLoopCmd(
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerLoopCmd] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerLoopCmd(
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = MessageProto.javaDescriptor.getMessageTypes.get(10)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = MessageProto.scalaDescriptor.messages(10)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerLoopCmd(
  )
  implicit class KinesisConsumerLoopCmdLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerLoopCmd]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerLoopCmd](_l) {
  }
}

@SerialVersionUID(0L)
final case class KinesisConsumerBootstrapEvt(
    awsRegion: String = "",
    kinesisStreamName: String = ""
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[KinesisConsumerBootstrapEvt] with com.trueaccord.lenses.Updatable[KinesisConsumerBootstrapEvt] with KinesisConsumerEvt {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      if (awsRegion != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, awsRegion) }
      if (kinesisStreamName != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, kinesisStreamName) }
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      {
        val __v = awsRegion
        if (__v != "") {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = kinesisStreamName
        if (__v != "") {
          _output__.writeString(2, __v)
        }
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerBootstrapEvt = {
      var __awsRegion = this.awsRegion
      var __kinesisStreamName = this.kinesisStreamName
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __awsRegion = _input__.readString()
          case 18 =>
            __kinesisStreamName = _input__.readString()
          case tag => _input__.skipField(tag)
        }
      }
      com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerBootstrapEvt(
          awsRegion = __awsRegion,
          kinesisStreamName = __kinesisStreamName
      )
    }
    def withAwsRegion(__v: String): KinesisConsumerBootstrapEvt = copy(awsRegion = __v)
    def withKinesisStreamName(__v: String): KinesisConsumerBootstrapEvt = copy(kinesisStreamName = __v)
    def getFieldByNumber(__fieldNumber: Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = awsRegion
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = kinesisStreamName
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(awsRegion)
        case 2 => _root_.scalapb.descriptors.PString(kinesisStreamName)
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerBootstrapEvt
}

object KinesisConsumerBootstrapEvt extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerBootstrapEvt] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerBootstrapEvt] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerBootstrapEvt = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerBootstrapEvt(
      __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[String],
      __fieldsMap.getOrElse(__fields.get(1), "").asInstanceOf[String]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerBootstrapEvt] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerBootstrapEvt(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = MessageProto.javaDescriptor.getMessageTypes.get(11)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = MessageProto.scalaDescriptor.messages(11)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerBootstrapEvt(
  )
  implicit class KinesisConsumerBootstrapEvtLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerBootstrapEvt]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerBootstrapEvt](_l) {
    def awsRegion: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.awsRegion)((c_, f_) => c_.copy(awsRegion = f_))
    def kinesisStreamName: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.kinesisStreamName)((c_, f_) => c_.copy(kinesisStreamName = f_))
  }
  final val AWS_REGION_FIELD_NUMBER = 1
  final val KINESIS_STREAM_NAME_FIELD_NUMBER = 2
}

@SerialVersionUID(0L)
final case class KinesisConsumerUpdateSeqNrEvt(
    kinesisSeqNr: String = ""
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[KinesisConsumerUpdateSeqNrEvt] with com.trueaccord.lenses.Updatable[KinesisConsumerUpdateSeqNrEvt] with KinesisConsumerEvt {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      if (kinesisSeqNr != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, kinesisSeqNr) }
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      {
        val __v = kinesisSeqNr
        if (__v != "") {
          _output__.writeString(1, __v)
        }
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerUpdateSeqNrEvt = {
      var __kinesisSeqNr = this.kinesisSeqNr
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __kinesisSeqNr = _input__.readString()
          case tag => _input__.skipField(tag)
        }
      }
      com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerUpdateSeqNrEvt(
          kinesisSeqNr = __kinesisSeqNr
      )
    }
    def withKinesisSeqNr(__v: String): KinesisConsumerUpdateSeqNrEvt = copy(kinesisSeqNr = __v)
    def getFieldByNumber(__fieldNumber: Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = kinesisSeqNr
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(kinesisSeqNr)
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerUpdateSeqNrEvt
}

object KinesisConsumerUpdateSeqNrEvt extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerUpdateSeqNrEvt] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerUpdateSeqNrEvt] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerUpdateSeqNrEvt = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerUpdateSeqNrEvt(
      __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[String]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerUpdateSeqNrEvt] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerUpdateSeqNrEvt(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = MessageProto.javaDescriptor.getMessageTypes.get(12)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = MessageProto.scalaDescriptor.messages(12)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerUpdateSeqNrEvt(
  )
  implicit class KinesisConsumerUpdateSeqNrEvtLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerUpdateSeqNrEvt]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerUpdateSeqNrEvt](_l) {
    def kinesisSeqNr: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.kinesisSeqNr)((c_, f_) => c_.copy(kinesisSeqNr = f_))
  }
  final val KINESIS_SEQ_NR_FIELD_NUMBER = 1
}

@SerialVersionUID(0L)
final case class KinesisConsumerActorState(
    awsRegion: String = "",
    kinesisStreamName: String = "",
    kinesisSeqNr: String = ""
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[KinesisConsumerActorState] with com.trueaccord.lenses.Updatable[KinesisConsumerActorState] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      if (awsRegion != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, awsRegion) }
      if (kinesisStreamName != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, kinesisStreamName) }
      if (kinesisSeqNr != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, kinesisSeqNr) }
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      {
        val __v = awsRegion
        if (__v != "") {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = kinesisStreamName
        if (__v != "") {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = kinesisSeqNr
        if (__v != "") {
          _output__.writeString(3, __v)
        }
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerActorState = {
      var __awsRegion = this.awsRegion
      var __kinesisStreamName = this.kinesisStreamName
      var __kinesisSeqNr = this.kinesisSeqNr
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __awsRegion = _input__.readString()
          case 18 =>
            __kinesisStreamName = _input__.readString()
          case 26 =>
            __kinesisSeqNr = _input__.readString()
          case tag => _input__.skipField(tag)
        }
      }
      com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerActorState(
          awsRegion = __awsRegion,
          kinesisStreamName = __kinesisStreamName,
          kinesisSeqNr = __kinesisSeqNr
      )
    }
    def withAwsRegion(__v: String): KinesisConsumerActorState = copy(awsRegion = __v)
    def withKinesisStreamName(__v: String): KinesisConsumerActorState = copy(kinesisStreamName = __v)
    def withKinesisSeqNr(__v: String): KinesisConsumerActorState = copy(kinesisSeqNr = __v)
    def getFieldByNumber(__fieldNumber: Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = awsRegion
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = kinesisStreamName
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = kinesisSeqNr
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(awsRegion)
        case 2 => _root_.scalapb.descriptors.PString(kinesisStreamName)
        case 3 => _root_.scalapb.descriptors.PString(kinesisSeqNr)
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerActorState
}

object KinesisConsumerActorState extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerActorState] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerActorState] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerActorState = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerActorState(
      __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[String],
      __fieldsMap.getOrElse(__fields.get(1), "").asInstanceOf[String],
      __fieldsMap.getOrElse(__fields.get(2), "").asInstanceOf[String]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerActorState] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerActorState(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = MessageProto.javaDescriptor.getMessageTypes.get(13)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = MessageProto.scalaDescriptor.messages(13)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerActorState(
  )
  implicit class KinesisConsumerActorStateLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerActorState]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.KinesisConsumerActorState](_l) {
    def awsRegion: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.awsRegion)((c_, f_) => c_.copy(awsRegion = f_))
    def kinesisStreamName: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.kinesisStreamName)((c_, f_) => c_.copy(kinesisStreamName = f_))
    def kinesisSeqNr: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.kinesisSeqNr)((c_, f_) => c_.copy(kinesisSeqNr = f_))
  }
  final val AWS_REGION_FIELD_NUMBER = 1
  final val KINESIS_STREAM_NAME_FIELD_NUMBER = 2
  final val KINESIS_SEQ_NR_FIELD_NUMBER = 3
}

@SerialVersionUID(0L)
final case class CourierStatusMessage(
    courierId: String = "",
    courierStatus: com.lmlt.actor.example.courier.realtime.service.message.CourierStatus = com.lmlt.actor.example.courier.realtime.service.message.CourierStatus.ONLINE
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[CourierStatusMessage] with com.trueaccord.lenses.Updatable[CourierStatusMessage] with CourierMessage {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      if (courierId != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, courierId) }
      if (courierStatus != com.lmlt.actor.example.courier.realtime.service.message.CourierStatus.ONLINE) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(2, courierStatus.value) }
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      {
        val __v = courierId
        if (__v != "") {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = courierStatus
        if (__v != com.lmlt.actor.example.courier.realtime.service.message.CourierStatus.ONLINE) {
          _output__.writeEnum(2, __v.value)
        }
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.lmlt.actor.example.courier.realtime.service.message.CourierStatusMessage = {
      var __courierId = this.courierId
      var __courierStatus = this.courierStatus
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __courierId = _input__.readString()
          case 16 =>
            __courierStatus = com.lmlt.actor.example.courier.realtime.service.message.CourierStatus.fromValue(_input__.readEnum())
          case tag => _input__.skipField(tag)
        }
      }
      com.lmlt.actor.example.courier.realtime.service.message.CourierStatusMessage(
          courierId = __courierId,
          courierStatus = __courierStatus
      )
    }
    def withCourierId(__v: String): CourierStatusMessage = copy(courierId = __v)
    def withCourierStatus(__v: com.lmlt.actor.example.courier.realtime.service.message.CourierStatus): CourierStatusMessage = copy(courierStatus = __v)
    def getFieldByNumber(__fieldNumber: Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = courierId
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = courierStatus.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(courierId)
        case 2 => _root_.scalapb.descriptors.PEnum(courierStatus.scalaValueDescriptor)
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.lmlt.actor.example.courier.realtime.service.message.CourierStatusMessage
}

object CourierStatusMessage extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.lmlt.actor.example.courier.realtime.service.message.CourierStatusMessage] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.lmlt.actor.example.courier.realtime.service.message.CourierStatusMessage] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.lmlt.actor.example.courier.realtime.service.message.CourierStatusMessage = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.lmlt.actor.example.courier.realtime.service.message.CourierStatusMessage(
      __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[String],
      com.lmlt.actor.example.courier.realtime.service.message.CourierStatus.fromValue(__fieldsMap.getOrElse(__fields.get(1), com.lmlt.actor.example.courier.realtime.service.message.CourierStatus.ONLINE.javaValueDescriptor).asInstanceOf[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor].getNumber)
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.lmlt.actor.example.courier.realtime.service.message.CourierStatusMessage] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.lmlt.actor.example.courier.realtime.service.message.CourierStatusMessage(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[String]).getOrElse(""),
        com.lmlt.actor.example.courier.realtime.service.message.CourierStatus.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(com.lmlt.actor.example.courier.realtime.service.message.CourierStatus.ONLINE.scalaValueDescriptor).number)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = MessageProto.javaDescriptor.getMessageTypes.get(14)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = MessageProto.scalaDescriptor.messages(14)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 2 => com.lmlt.actor.example.courier.realtime.service.message.CourierStatus
    }
  }
  lazy val defaultInstance = com.lmlt.actor.example.courier.realtime.service.message.CourierStatusMessage(
  )
  implicit class CourierStatusMessageLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.CourierStatusMessage]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.CourierStatusMessage](_l) {
    def courierId: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.courierId)((c_, f_) => c_.copy(courierId = f_))
    def courierStatus: _root_.com.trueaccord.lenses.Lens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.CourierStatus] = field(_.courierStatus)((c_, f_) => c_.copy(courierStatus = f_))
  }
  final val COURIER_ID_FIELD_NUMBER = 1
  final val COURIER_STATUS_FIELD_NUMBER = 2
}

@SerialVersionUID(0L)
final case class CourierLocationMessage(
    courierId: String = "",
    coordinates: scala.Option[com.lmlt.actor.example.courier.realtime.service.message.Coordinates] = None
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[CourierLocationMessage] with com.trueaccord.lenses.Updatable[CourierLocationMessage] with CourierMessage {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      if (courierId != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, courierId) }
      if (coordinates.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(coordinates.get.serializedSize) + coordinates.get.serializedSize }
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      {
        val __v = courierId
        if (__v != "") {
          _output__.writeString(1, __v)
        }
      };
      coordinates.foreach { __v =>
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.lmlt.actor.example.courier.realtime.service.message.CourierLocationMessage = {
      var __courierId = this.courierId
      var __coordinates = this.coordinates
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __courierId = _input__.readString()
          case 18 =>
            __coordinates = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __coordinates.getOrElse(com.lmlt.actor.example.courier.realtime.service.message.Coordinates.defaultInstance)))
          case tag => _input__.skipField(tag)
        }
      }
      com.lmlt.actor.example.courier.realtime.service.message.CourierLocationMessage(
          courierId = __courierId,
          coordinates = __coordinates
      )
    }
    def withCourierId(__v: String): CourierLocationMessage = copy(courierId = __v)
    def getCoordinates: com.lmlt.actor.example.courier.realtime.service.message.Coordinates = coordinates.getOrElse(com.lmlt.actor.example.courier.realtime.service.message.Coordinates.defaultInstance)
    def clearCoordinates: CourierLocationMessage = copy(coordinates = None)
    def withCoordinates(__v: com.lmlt.actor.example.courier.realtime.service.message.Coordinates): CourierLocationMessage = copy(coordinates = Some(__v))
    def getFieldByNumber(__fieldNumber: Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = courierId
          if (__t != "") __t else null
        }
        case 2 => coordinates.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(courierId)
        case 2 => coordinates.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.lmlt.actor.example.courier.realtime.service.message.CourierLocationMessage
}

object CourierLocationMessage extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.lmlt.actor.example.courier.realtime.service.message.CourierLocationMessage] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.lmlt.actor.example.courier.realtime.service.message.CourierLocationMessage] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.lmlt.actor.example.courier.realtime.service.message.CourierLocationMessage = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.lmlt.actor.example.courier.realtime.service.message.CourierLocationMessage(
      __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[String],
      __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[com.lmlt.actor.example.courier.realtime.service.message.Coordinates]]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.lmlt.actor.example.courier.realtime.service.message.CourierLocationMessage] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.lmlt.actor.example.courier.realtime.service.message.CourierLocationMessage(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[com.lmlt.actor.example.courier.realtime.service.message.Coordinates]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = MessageProto.javaDescriptor.getMessageTypes.get(15)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = MessageProto.scalaDescriptor.messages(15)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 2 => __out = com.lmlt.actor.example.courier.realtime.service.message.Coordinates
    }
    __out
  }
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.lmlt.actor.example.courier.realtime.service.message.CourierLocationMessage(
  )
  implicit class CourierLocationMessageLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.CourierLocationMessage]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.CourierLocationMessage](_l) {
    def courierId: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.courierId)((c_, f_) => c_.copy(courierId = f_))
    def coordinates: _root_.com.trueaccord.lenses.Lens[UpperPB, com.lmlt.actor.example.courier.realtime.service.message.Coordinates] = field(_.getCoordinates)((c_, f_) => c_.copy(coordinates = Some(f_)))
    def optionalCoordinates: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.lmlt.actor.example.courier.realtime.service.message.Coordinates]] = field(_.coordinates)((c_, f_) => c_.copy(coordinates = f_))
  }
  final val COURIER_ID_FIELD_NUMBER = 1
  final val COORDINATES_FIELD_NUMBER = 2
}

object MessageProto {
  private lazy val ProtoBytes: Array[Byte] =
      com.trueaccord.scalapb.Encoding.fromBase64(scala.collection.Seq(
  """Cg1tZXNzYWdlLnByb3RvEi9jb20ubG1sdC5hY3Rvci5leGFtcGxlLmNvdXJpZXIucmVhbHRpbWUuc2VydmljZRoVc2NhbGFwY
  i9zY2FsYXBiLnByb3RvIkcKC0Nvb3JkaW5hdGVzEhwKCWxvbmdpdHVkZRgBIAEoAVIJbG9uZ2l0dWRlEhoKCGxhdGl0dWRlGAIgA
  SgBUghsYXRpdHVkZSLGAQoMTG9jYXRpb25QaW5nEhkKCHRyYWNlX2lkGAEgASgJUgd0cmFjZUlkEhwKCXRpbWVzdGFtcBgCIAEoA
  1IJdGltZXN0YW1wEh0KCmNvdXJpZXJfaWQYAyABKAlSCWNvdXJpZXJJZBJeCgtjb29yZGluYXRlcxgEIAEoCzI8LmNvbS5sbWx0L
  mFjdG9yLmV4YW1wbGUuY291cmllci5yZWFsdGltZS5zZXJ2aWNlLkNvb3JkaW5hdGVzUgtjb29yZGluYXRlcyK3AQoOS2luZXNpc
  01lc3NhZ2USJAoOa2luZXNpc19zZXFfbnIYASABKAlSDGtpbmVzaXNTZXFOchJkCg1sb2NhdGlvbl9waW5nGAsgASgLMj0uY29tL
  mxtbHQuYWN0b3IuZXhhbXBsZS5jb3VyaWVyLnJlYWx0aW1lLnNlcnZpY2UuTG9jYXRpb25QaW5nSABSDGxvY2F0aW9uUGluZ0IZC
  hdraW5lc2lzX21lc3NhZ2VfcGF5bG9hZCIuChZDb3VyaWVyQWN0b3JPZmZsaW5lQ21kOhTiPxEKD0NvdXJpZXJBY3RvckNtZCKyA
  QoVQ291cmllckFjdG9yU3RhdHVzRXZ0EhwKCXRpbWVzdGFtcBgBIAEoA1IJdGltZXN0YW1wEmUKDmNvdXJpZXJfc3RhdHVzGAIgA
  SgOMj4uY29tLmxtbHQuYWN0b3IuZXhhbXBsZS5jb3VyaWVyLnJlYWx0aW1lLnNlcnZpY2UuQ291cmllclN0YXR1c1INY291cmllc
  lN0YXR1czoU4j8RCg9Db3VyaWVyQWN0b3JFdnQirQEKF0NvdXJpZXJBY3RvckxvY2F0aW9uRXZ0EhwKCXRpbWVzdGFtcBgBIAEoA
  1IJdGltZXN0YW1wEl4KC2Nvb3JkaW5hdGVzGAIgASgLMjwuY29tLmxtbHQuYWN0b3IuZXhhbXBsZS5jb3VyaWVyLnJlYWx0aW1lL
  nNlcnZpY2UuQ29vcmRpbmF0ZXNSC2Nvb3JkaW5hdGVzOhTiPxEKD0NvdXJpZXJBY3RvckV2dCLXAQoYQ291cmllck9ic2VydmVyU
  3RhdHVzRXZ0EhwKCXRpbWVzdGFtcBgBIAEoA1IJdGltZXN0YW1wEh0KCmNvdXJpZXJfaWQYAiABKAlSCWNvdXJpZXJJZBJlCg5jb
  3VyaWVyX3N0YXR1cxgDIAEoDjI+LmNvbS5sbWx0LmFjdG9yLmV4YW1wbGUuY291cmllci5yZWFsdGltZS5zZXJ2aWNlLkNvdXJpZ
  XJTdGF0dXNSDWNvdXJpZXJTdGF0dXM6F+I/FAoSQ291cmllck9ic2VydmVyRXZ0ItIBChpDb3VyaWVyT2JzZXJ2ZXJMb2NhdGlvb
  kV2dBIcCgl0aW1lc3RhbXAYASABKANSCXRpbWVzdGFtcBIdCgpjb3VyaWVyX2lkGAIgASgJUgljb3VyaWVySWQSXgoLY29vcmRpb
  mF0ZXMYAyABKAsyPC5jb20ubG1sdC5hY3Rvci5leGFtcGxlLmNvdXJpZXIucmVhbHRpbWUuc2VydmljZS5Db29yZGluYXRlc1ILY
  29vcmRpbmF0ZXM6F+I/FAoSQ291cmllck9ic2VydmVyRXZ0Io4CChFDb3VyaWVyQWN0b3JTdGF0ZRIyChRsYXN0TWVzc2FnZVRpb
  WVzdGFtcBgBIAEoA1IUbGFzdE1lc3NhZ2VUaW1lc3RhbXASZQoOY291cmllcl9zdGF0dXMYAiABKA4yPi5jb20ubG1sdC5hY3Rvc
  i5leGFtcGxlLmNvdXJpZXIucmVhbHRpbWUuc2VydmljZS5Db3VyaWVyU3RhdHVzUg1jb3VyaWVyU3RhdHVzEl4KC2Nvb3JkaW5hd
  GVzGAMgASgLMjwuY29tLmxtbHQuYWN0b3IuZXhhbXBsZS5jb3VyaWVyLnJlYWx0aW1lLnNlcnZpY2UuQ29vcmRpbmF0ZXNSC2Nvb
  3JkaW5hdGVzIqIBChtLaW5lc2lzQ29uc3VtZXJCb290c3RyYXBDbWQSHQoKYXdzX3JlZ2lvbhgBIAEoCVIJYXdzUmVnaW9uEi4KE
  2tpZW5zaXNfc3RyZWFtX25hbWUYAiABKAlSEWtpZW5zaXNTdHJlYW1OYW1lEhsKCWVudGl0eV9pZBgDIAEoCVIIZW50aXR5SWQ6F
  +I/FAoSS2luZXNpc0NvbnN1bWVyQ21kIjEKFktpbmVzaXNDb25zdW1lckxvb3BDbWQ6F+I/FAoSS2luZXNpc0NvbnN1bWVyQ21kI
  oUBChtLaW5lc2lzQ29uc3VtZXJCb290c3RyYXBFdnQSHQoKYXdzX3JlZ2lvbhgBIAEoCVIJYXdzUmVnaW9uEi4KE2tpbmVzaXNfc
  3RyZWFtX25hbWUYAiABKAlSEWtpbmVzaXNTdHJlYW1OYW1lOhfiPxQKEktpbmVzaXNDb25zdW1lckV2dCJeCh1LaW5lc2lzQ29uc
  3VtZXJVcGRhdGVTZXFOckV2dBIkCg5raW5lc2lzX3NlcV9uchgBIAEoCVIMa2luZXNpc1NlcU5yOhfiPxQKEktpbmVzaXNDb25zd
  W1lckV2dCKQAQoZS2luZXNpc0NvbnN1bWVyQWN0b3JTdGF0ZRIdCgphd3NfcmVnaW9uGAEgASgJUglhd3NSZWdpb24SLgoTa2luZ
  XNpc19zdHJlYW1fbmFtZRgCIAEoCVIRa2luZXNpc1N0cmVhbU5hbWUSJAoOa2luZXNpc19zZXFfbnIYAyABKAlSDGtpbmVzaXNTZ
  XFOciKxAQoUQ291cmllclN0YXR1c01lc3NhZ2USHQoKY291cmllcl9pZBgBIAEoCVIJY291cmllcklkEmUKDmNvdXJpZXJfc3Rhd
  HVzGAIgASgOMj4uY29tLmxtbHQuYWN0b3IuZXhhbXBsZS5jb3VyaWVyLnJlYWx0aW1lLnNlcnZpY2UuQ291cmllclN0YXR1c1INY
  291cmllclN0YXR1czoT4j8QCg5Db3VyaWVyTWVzc2FnZSKsAQoWQ291cmllckxvY2F0aW9uTWVzc2FnZRIdCgpjb3VyaWVyX2lkG
  AEgASgJUgljb3VyaWVySWQSXgoLY29vcmRpbmF0ZXMYAiABKAsyPC5jb20ubG1sdC5hY3Rvci5leGFtcGxlLmNvdXJpZXIucmVhb
  HRpbWUuc2VydmljZS5Db29yZGluYXRlc1ILY29vcmRpbmF0ZXM6E+I/EAoOQ291cmllck1lc3NhZ2UqKAoNQ291cmllclN0YXR1c
  xIKCgZPTkxJTkUQABILCgdPRkZMSU5FEAFCwgHiP74BIhxzZWFsZWQgdHJhaXQgQ291cmllckFjdG9yQ21kIhxzZWFsZWQgdHJha
  XQgQ291cmllckFjdG9yRXZ0Ih9zZWFsZWQgdHJhaXQgQ291cmllck9ic2VydmVyRXZ0Ih9zZWFsZWQgdHJhaXQgS2luZXNpc0Nvb
  nN1bWVyQ21kIh9zZWFsZWQgdHJhaXQgS2luZXNpc0NvbnN1bWVyRXZ0IhtzZWFsZWQgdHJhaXQgQ291cmllck1lc3NhZ2UoAWIGc
  HJvdG8z"""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, Seq(
      com.trueaccord.scalapb.scalapb.ScalapbProto.scalaDescriptor
    ))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, Array(
      com.trueaccord.scalapb.scalapb.ScalapbProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}